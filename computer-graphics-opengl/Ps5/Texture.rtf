{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf330
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f0\fs24 \cf0 /* Hints from OpenGL guide on Texture techniques  */\
\
/* Setting up the variables  */\
#define checkImageWidth 64\
#define checkImageHeight 64\
\
/* Texture variables */\
TexMap   tmap;                  /* To load texture maps into */\
/* GLubyte *texpointer; */\
GLubyte *texpointer; \
int texcols, texrows;\
\
/*       checkerboard  and alpha blend textures     */\
 GLubyte checkImage[checkImageHeight][checkImageWidth][4];\
 GLubyte checkImageRGBA[checkImageHeight][checkImageWidth][4];\
\
#ifdef GL_VERSION_1_1\
 GLuint texName[MAXTEXTURES];\
#endif\
\
\
\
/*      Create checkerboard texture  */\
  for (i = 0; i < checkImageHeight; i++) \{\
    for (j = 0; j < checkImageWidth; j++) \{\
      c = ((((i&0x8)==0)^((j&0x8))==0))*255;\
      checkImage[i][j][0] = (GLubyte) c ;\
      checkImage[i][j][1] = (GLubyte) c;\
      checkImage[i][j][2] = (GLubyte) c;\
      checkImage[i][j][3] = (GLubyte) 255;\
                            /* Change this to < 255 for transparency */\
    \}\
  \}\
\
\
/* setting the texture if ReadPPM doesn't. */\
\
\
    texpointer = &checkImage[0][0][0];\
    texcols = checkImageWidth;\
    texrows = checkImageHeight;\
\
\
/********************************/\
/* Enabling and initialization  */\
  glEnable(GL_TEXTURE_2D);\
\
  glMatrixMode(GL_TEXTURE);\
  glLoadIdentity();\
\
  glPixelStorei(GL_UNPACK_ALIGNMENT, 1);\
\
#ifdef GL_VERSION_1_1\
  glGenTextures(1, texName);\
  glBindTexture(GL_TEXTURE_2D, texName[0]);\
#endif\
\
  glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL);\
  glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER,\
                  GL_LINEAR); /* NEAREST */\
  glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);\
  glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S,\
                  GL_CLAMP); /*  REPEAT */\
  glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP);\
\
\
\
\
  /* IN OR NEAR DISPLAY CODE, must decide which image, bind it:  */\
\
/* FOR PPM files, 3-byte RGB color  */\
  glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB, texcols, texrows, \
     0, GL_RGB, GL_UNSIGNED_BYTE, texpointer);\
\
/* FOR checkerboard and similar textures, 4-byte RGBA color  */\
  glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, texcols, texrows, \
     0, GL_RGBA, GL_UNSIGNED_BYTE, texpointer);\
\
}